# ls highlighting 
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagacad

function curr_repo_p4()
{
    echo [$(basename "$1")]
}

function curr_repo_git()
{
    echo [$(basename "$1")]
}

function curr_repo_imp()
{
    if [ "$1" == "/" ]; then
        echo ""
    elif [ -f "$1/p4.config" ]; then
        curr_repo_p4 "$1"
    elif [ -d "$1/.git" ]; then
        curr_repo_git "$1"
    else
        curr_repo_imp $(dirname "$1")
    fi
}

function curr_repo() {
    #echo "\[\e[31m\][daji_dev_artproplus_18]\[\e[0m\]"
    #echo "[daji_dev_artproplus_18]"
    echo `curr_repo_imp $PWD`
}

# PS1 prompt
export PS1="\e[0;33m\u@\h:\W\e[m\$ "
export PS1='\[\e[0;33m\]\u@\h:\W\$\[\e[0m\]'  # fix the command wrapping problem
export PS1='\[\e[0;33m\]\uðŸŒ€\W\[\e[0m\]\[\e[36m\]`curr_repo`\[\e[0m\]\[\e[0;33m\]ðŸ’°\[\e[0m\] '  # fix the command wrapping problem

#export PS1="\e[0;33m\h:\W \u\$ \e[m"
# Tell grep to highlight matches
export GREP_OPTIONS='--color=auto'

#Encoding for SSH connection
export LC_CTYPE=en_US.UTF-8

# emacs without init file
alias emacsq='emacs -q -nw'

# brew with proxy
alias brew='ALL_PROXY=http://eglbeprx001.esko-graphics.com:8080 brew'

# cscope editor
export EDITOR='emacs -q -nw'

# P4 config
export P4CONFIG=p4.config
export P4EDITOR=emacsq
export P4DIFF=colordiff

if [ -f ~/.bashrc ]; then
    source ~/.bashrc
fi


export PATH=$PATH:/opt/local/bin:/opt/local/sbin

# Bash completion
if [ -f /opt/local/etc/bash_completion ]; then
    . /opt/local/etc/bash_completion
fi


# auto virtualenv
auto_venv()
{
    if [ -f .venv/bin/activate ]; then
        source .venv/bin/activate
    else
        root=`which python`
        root=${root%/.venv/bin/python}
        if [[ $PWD == $root* ]]; then
            return
        fi
        if (type deactivate > /dev/null 2>&1); then
            deactivate
        fi
    fi
}

function cd
{
    builtin cd "$@"
    auto_venv
}

function venv
{
    local py=`which python3`
    if [ "$1" == "2" ]; then
        py=`which python2`
    fi
    virtualenv -p $py .venv

    auto_venv
}

# ai
function ai
{
    cd /git/bitbucket/ai
}

# Docker
function docker-env()
{
    eval "$(docker-machine env $1)"
    export DOCKER_OPTS="-H $DOCKER_HOST --tls --tlskey $DOCKER_CERT_PATH/server-key.pem --tlscert $DOCKER_CERT_PATH/server.pem --tlsverify --tlscacert $DOCKER_CERT_PATH/ca.pem"
    #export DOCKER_OPTS="-H $DOCKER_HOST --insecure-registry atlantis:5000 --tls --tlskey $DOCKER_CERT_PATH/server-key.pem --tlscert $DOCKER_CERT_PATH/server.pem --tlsverify --tlscacert $DOCKER_CERT_PATH/ca.pem"
    alias docker="docker $DOCKER_OPTS"
}
